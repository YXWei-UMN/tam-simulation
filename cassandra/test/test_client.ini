[client1]
client_id = 1
client_name = c1
num_instances = 100
think_time = 0
; network usage
req_sz = 1e-5
reply_sz = 0.1
msg_pass_req_sz = 1e-5
msg_pass_reply_sz = 0.1
; cpu usage
common_stg_cpu_time = 1e-5 ; must has this
c_req_handle_stg_cpu_time = 1e-5
c_respond_stg_cpu_time = 1e-5
msg_in_stg_cpu_time = 1e-5
msg_out_stg_cpu_time = 1e-5
; io usage
read_sz = 0.1
write_sz = 0
; consistency level
replication_factor = 3
write_consistency = QUORUM ;can be: ALL, QUORUM, ONE, TWO, THREE, ANY, SERIAL, no support for multi-data-center
read_consistency = ONE
work_consistency = read_consistency
;access
access_pn_list = [0, 1, 2]
access_vn_list = None
; acess pattern
load_balance_policy = round_robin ; load balance policy as the real system configuration
; key generator
key_distribution = random ; can also be zipf, increment
proc_stg_name_list = ['read'] ; which stage to serve as processing stage, could do more than one, like first read, then write
; monitor
monitor_interval = 1

[client2]
client_id = 2
client_name = c2
num_instances = 100
think_time = 0
; network usage
req_sz = 1e-5
reply_sz = 0.1
msg_pass_req_sz = 1e-5
msg_pass_reply_sz = 0.1
; cpu usage
common_stg_cpu_time = 1e-5 ; must has this
c_req_handle_stg_cpu_time = 1e-5
c_respond_stg_cpu_time = 1e-5
msg_in_stg_cpu_time = 1e-5
msg_out_stg_cpu_time = 1e-5
; io usage
read_sz = 0.1
write_sz = 0
; consistency level
replication_factor = 3
write_consistency = QUORUM ;can be: ALL, QUORUM, ONE, TWO, THREE, ANY, SERIAL, no support for multi-data-center
read_consistency = ONE
work_consistency = read_consistency
;access
access_pn_list = [0, 1, 2]
access_vn_list = None
; acess pattern
load_balance_policy = round_robin
; key generator
key_distribution = random ; can also be zipf, increment
proc_stg_name_list = ['read']
; monitor
monitor_interval = 1

